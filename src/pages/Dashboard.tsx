import { DashboardLayout } from '@/components/layout/DashboardLayout';
import { EmployeeJobDescription } from '@/components/dashboard/EmployeeJobDescription';
import { EmployeeTrainingDashboard } from '@/components/dashboard/EmployeeTrainingDashboard';
import { AdminDashboardSection } from '@/components/dashboard/AdminDashboardSection';
import { EmployeeDashboardSection } from '@/components/dashboard/EmployeeDashboardSection';
import { OKRLeaderboardSection } from '@/components/dashboard/OKRLeaderboardSection';
import { CompetencyFrameworkSection } from '@/components/dashboard/CompetencyFrameworkSection';
import { RecentActivitiesSection } from '@/components/dashboard/RecentActivitiesSection';
import { CompanyPoliciesSection } from '@/components/dashboard/CompanyPoliciesSection';
import { QuickStatsGrid } from '@/components/dashboard/QuickStatsGrid';
import { RecentUpdatesSection } from '@/components/dashboard/RecentUpdatesSection';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { useAuth } from '@/hooks/useAuth';
import { Clock, TrendingUp, Crown, Briefcase, Sparkles } from 'lucide-react';

export default function Dashboard() {
  const { user, profile, isSuperAdmin, isAdmin } = useAuth();

  const getCurrentDate = () => {
    const now = new Date();
    const days = ['Ch·ªß Nh·∫≠t', 'Th·ª© Hai', 'Th·ª© Ba', 'Th·ª© T∆∞', 'Th·ª© NƒÉm', 'Th·ª© S√°u', 'Th·ª© B·∫£y'];
    const months = ['th√°ng 1', 'th√°ng 2', 'th√°ng 3', 'th√°ng 4', 'th√°ng 5', 'th√°ng 6', 
                   'th√°ng 7', 'th√°ng 8', 'th√°ng 9', 'th√°ng 10', 'th√°ng 11', 'th√°ng 12'];
    
    return `${days[now.getDay()]}, ${now.getDate()} ${months[now.getMonth()]}, ${now.getFullYear()}`;
  };

  const getGreeting = () => {
    const hour = new Date().getHours();
    if (hour < 12) return 'Ch√†o bu·ªïi s√°ng';
    if (hour < 18) return 'Ch√†o bu·ªïi chi·ªÅu';
    return 'Ch√†o bu·ªïi t·ªëi';
  };

  const motivationalQuotes = [
    "üéØ H√¥m nay l√† m·ªôt ng√†y tuy·ªát v·ªùi ƒë·ªÉ ƒë·∫°t ƒë∆∞·ª£c m·ª•c ti√™u!",
    "‚≠ê S·∫µn s√°ng cho m·ªôt ng√†y l√†m vi·ªác hi·ªáu qu·∫£",
    "üöÄ C√πng nhau x√¢y d·ª±ng m·ªôt t∆∞∆°ng lai t·ªët ƒë·∫πp!",
    "üí™ M·ªói ng√†y l√† m·ªôt c∆° h·ªôi m·ªõi ƒë·ªÉ ph√°t tri·ªÉn!",
    "üåü Th√†nh c√¥ng ƒë·∫øn t·ª´ s·ª± ki√™n tr√¨ v√† n·ªó l·ª±c kh√¥ng ng·ª´ng",
    "üé® H√£y s√°ng t·∫°o v√† l√†m ƒëi·ªÅu g√¨ ƒë√≥ c√≥ √Ω nghƒ©a h√¥m nay"
  ];
  const randomQuote = motivationalQuotes[Math.floor(Math.random() * motivationalQuotes.length)];

  const getRoleTitle = () => {
    if (isSuperAdmin) return 'Ch·ªß t·ªãch c√¥ng ty';
    if (isAdmin) return 'Gi√°m ƒë·ªëc ƒëi·ªÅu h√†nh';
    return 'Nh√¢n vi√™n';
  };

  return (
    <DashboardLayout>
      <div className="space-y-6">
        {/* Hero Welcome Section */}
        <Card className="border-0 shadow-xl overflow-hidden relative bg-gradient-to-br from-primary via-primary/90 to-primary/80">
          <CardContent className="p-0">
            {/* Decorative elements */}
            <div className="absolute -top-20 -left-20 w-40 h-40 bg-white/10 rounded-full"></div>
            <div className="absolute -bottom-20 -right-20 w-40 h-40 bg-white/10 rounded-full"></div>
            <div className="absolute top-10 -right-10 w-20 h-20 bg-white/5 rounded-full"></div>
            <div className="absolute -bottom-10 -left-10 w-20 h-20 bg-white/5 rounded-full"></div>
            <div className="absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-32 h-32 bg-white/5 rounded-full"></div>
            
            <div className="relative p-8 text-white">
              <div className="flex items-start justify-between">
                <div className="flex-1">
                  <div className="flex items-center gap-3 mb-4">
                    <div className="w-12 h-12 bg-white/20 rounded-xl flex items-center justify-center backdrop-blur-sm">
                      {isSuperAdmin ? <Crown className="h-7 w-7 text-white" /> : 
                       isAdmin ? <Briefcase className="h-7 w-7 text-white" /> : 
                       <TrendingUp className="h-7 w-7 text-white" />}
                    </div>
                    <div>
                      <span className="text-white/90 text-sm font-medium block">{getGreeting()}</span>
                      <span className="text-white/70 text-xs">{getRoleTitle()}</span>
                    </div>
                  </div>
                  
                  <h1 className="text-4xl font-bold mb-3 text-white">
                    Ch√†o m·ª´ng tr·ªü l·∫°i, {profile?.full_name || 'Ng∆∞·ªùi d√πng'}!
                  </h1>
                  
                  <p className="text-white/90 text-lg mb-6 leading-relaxed flex items-center gap-2">
                    <Sparkles className="h-5 w-5 text-yellow-300" />
                    {randomQuote}
                  </p>
                  
                  <div className="flex items-center gap-2 text-white/80 text-sm mb-6">
                    <Clock className="h-4 w-4" />
                    <span>{getCurrentDate()}</span>
                  </div>
                </div>
              </div>
            </div>
          </CardContent>
        </Card>

        {/* Quick Stats Grid */}
        <QuickStatsGrid />

        {/* Role-based Dashboard Content */}
        {(isSuperAdmin || isAdmin) ? (
          <AdminDashboardSection />
        ) : (
          <EmployeeDashboardSection />
        )}

        {/* Main Content Grid */}
        <div className="grid grid-cols-1 lg:grid-cols-3 gap-6">
          {/* Company Policies */}
          <div className="lg:col-span-1">
            <CompanyPoliciesSection />
          </div>

          {/* Recent Updates */}
          <div className="lg:col-span-1">
            <RecentUpdatesSection />
          </div>

          {/* OKR Leaderboard */}
          <div className="lg:col-span-1">
            <OKRLeaderboardSection />
          </div>
        </div>

        {/* Secondary Content Grid */}
        <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
          {/* Employee Information */}
          <EmployeeJobDescription />

          {/* Competency Framework */}
          <CompetencyFrameworkSection />
        </div>

        {/* Recent Activities */}
        <RecentActivitiesSection />

        {/* Training Section */}
        <EmployeeTrainingDashboard />
      </div>
    </DashboardLayout>
  );
}
